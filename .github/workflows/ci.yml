name: ReleaseIt

on:
  push:
    branches:
      - "master"
      - "[0-9]+.[0-9]+.x"
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: {}

env:
  IMAGE_NAME: "greatideasgh/educarehigh"
  CURRENT_TAG: "latest"

defaults:
  run:
    shell: bash

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --tl

      - name: Test
        run: dotnet test --no-build --verbosity normal --tl

  release:
    name: Release and publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
      - run: npm install
      - run: npx release-it --ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: version
      #   id: version
      #   run: |
      #     tag=${GITHUB_REF/refs\/tags\//}
      #     version=${tag#v}
      #     major=${version%%.*}
      #     echo "tag=${tag}" >> $GITHUB_OUTPUT
      #     echo "version=${version}" >> $GITHUB_OUTPUT
      #     echo "major=${major}" >> $GITHUB_OUTPUT
      #     echo Current version is $version
      #     echo Current tag is $tag

      - name: Get current version
        id: version
        run: echo "CURRENT_TAG=$(git describe --tags)" >> $GITHUB_ENV

      # - name: Setup .NET
      #   uses: actions/setup-dotnet@v3
      #   with:
      #     dotnet-version: 8.0.x

      - name: Install NBGV tool
        # run: |
        #   dotnet tool install --tool-path . nbgv
        #   .\nbgv cloud
        uses: dotnet/nbgv@v0.4.2
        with:
          path: .
          setCommonVars: true
          # stamp: package.json

      - name: get version
        run: |
          echo version: $(nbgv get-version -v SimpleVersion)

      - name: Generate Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: docker.io/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
          flavor: |
            latest=true

      - name: Build Docker image
        run: |
          docker build --file src/Web/Dockerfile --tag ${{ env.IMAGE_NAME }}:${{ env.CURRENT_TAG }} .
