name: ReleaseIt

on:
  push:
    branches:
      - "v[0-9]+.[0-9]+.x"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: {}

env:
  IMAGE_NAME: "greatideasgh/educarehigh"
  CURRENT_TAG: "latest"

defaults:
  run:
    shell: bash

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --tl

      - name: Test
        run: dotnet test --no-build --verbosity normal --tl

  release:
    name: Release and publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install NBGV tool
        uses: dotnet/nbgv@v0.4.2
        with:
          path: .
          setCommonVars: true

      - name: Set app version
        run: |
          echo version before: $(nbgv get-version -v SimpleVersion)
          npm install
          VERSION=$(npx release-it --release-version | tail -n 1 | tr -d '"')
          nbgv set-version $VERSION
          echo version after: $(nbgv get-version -v SimpleVersion)
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

          # Check if the branch is clean
          if ! git diff --quiet; then
            # Branch is not clean, commit changes
            git add .
            git commit -m "chore: updated version.json version to v$(nbgv get-version -v SimpleVersion)"
          else
            echo "Branch is clean, skipping commit"
          fi

      - name: Set up Git to release
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          npx release-it --ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: docker.io/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
          flavor: |
            latest=true

      - name: Build Docker image
        run: |
          docker build --file src/Web/Dockerfile --tag ${{ env.IMAGE_NAME }}:${{ env.CURRENT_TAG }} .
